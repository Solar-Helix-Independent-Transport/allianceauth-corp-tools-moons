{"version":3,"sources":["components/PanelLoader.js","components/ApiSelect.js","helpers/Api.js","components/MoonRentalPannel.js","App.js","index.js"],"names":["PanelLoader","Panel","Body","className","colourStyles","option","styles","color","ApiSelect","setValue","apiLookup","cacheOptions","loadOptions","defaultOptions","onChange","newValue","console","log","label","fetchFromObject","obj","prop","_index","indexOf","substring","substr","return_key_pair","label_key","value_key","ob","reduce","p","c","push","value","err","searchChars","search_str","a","axios","get","params","search_text","api","characters","data","sort","searchCorps","corps","searchMoons","moons","defaults","xsrfHeaderName","MoonRentalPannel","useState","character_id","setCharacter","corporation_id","setCorporation","moon_id","setMoon","isk","setIsk","bsStyle","Heading","FormGroup","controlId","ControlLabel","HelpBlock","FormControl","type","placeholder","e","target","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35178a5e.chunk.js","sourcesContent":["import React from \"react\";\nimport { TailSpin } from \"@agney/react-loading\";\nimport { Panel } from \"react-bootstrap\";\nexport const PanelLoader = () => {\n  return (\n    <Panel.Body className=\"flex-container\">\n      <TailSpin  className=\"spinner-size\" />\n    </Panel.Body>\n  );\n};\n","import React from \"react\";\nimport AsyncSelect from \"react-select/async\";\n\nconst colourStyles = {\n  option: (styles) => {\n    return {\n      ...styles,\n      color: \"black\"\n    };\n  },\n};\n\nexport const ApiSelect = ({setValue, apiLookup}) => {\n  function handleChange(newValue){\n    console.log(\"Selected: \" + newValue.label);\n    setValue(newValue);\n  };\n\n  return (\n    <AsyncSelect\n      cacheOptions\n      styles={colourStyles}\n      loadOptions={apiLookup}\n      defaultOptions={[]}\n      onChange={handleChange}\n    />\n  );\n};\n\n","import axios from \"axios\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\nfunction fetchFromObject(obj, prop) {\n  if (typeof obj === \"undefined\") return \"Error\";\n  var _index = prop.indexOf(\".\");\n  if (_index > -1) {\n    return fetchFromObject(\n      obj[prop.substring(0, _index)],\n      prop.substr(_index + 1)\n    );\n  }\n  return obj[prop];\n}\n\nfunction return_key_pair(label_key, value_key, ob) {\n  return ob.reduce((p, c) => {\n    try {\n      p.push({\n        value: fetchFromObject(c, value_key),\n        label: fetchFromObject(c, label_key),\n      });\n      return p;\n    } catch (err) {\n      console.log(`ERROR searching for key/val`);\n      console.log(err);\n      return p;\n    }\n  }, []);\n}\n\nexport async function searchChars(search_str) {\n  const api = await axios.get(`/moons/api/characters/search`, {\n    params: { search_text: search_str },\n  });\n  const characters = return_key_pair(\n    \"character_name\",\n    \"character_id\",\n    api.data\n  );\n  characters.sort();\n  return characters;\n}\n\nexport async function searchCorps(search_str) {\n  const api = await axios.get(`/moons/api/corporations/search`, {\n    params: { search_text: search_str },\n  });\n  const corps = return_key_pair(\n    \"corporation_name\",\n    \"corporation_id\",\n    api.data\n  );\n  corps.sort();\n  return corps;\n}\n\nexport async function searchMoons(search_str) {\n  const api = await axios.get(`/moons/api/moons/search`, {\n    params: { search_text: search_str },\n  });\n  const moons = return_key_pair(\n    \"name\",\n    \"id\",\n    api.data\n  );\n  moons.sort();\n  return moons;\n}\n","import React, { useState } from \"react\";\nimport { ApiSelect } from \"./ApiSelect\";\nimport { searchChars, searchCorps, searchMoons } from \"../helpers/Api\";\nimport {\n  Panel,\n  FormGroup,\n  FormControl,\n  ControlLabel,\n  HelpBlock,\n} from \"react-bootstrap\";\n\nexport const MoonRentalPannel = ({ setValue, apiLookup }) => {\n  const [character_id, setCharacter] = useState({ label: \"\", value: 0 });\n  const [corporation_id, setCorporation] = useState({ label: \"\", value: 0 });\n  const [moon_id, setMoon] = useState({ label: \"\", value: 0 });\n  const [isk, setIsk] = useState(100000000);\n\n  function handleIskChange(e) {\n    setIsk(e.target.value);\n  }\n\n  return (\n    <Panel bsStyle=\"primary\">\n      <Panel.Heading>Moon Rental</Panel.Heading>\n      <Panel.Body>\n        <form>\n          <FormGroup controlId=\"formMoons\">\n            <ControlLabel>Charater</ControlLabel>\n            <ApiSelect apiLookup={searchChars} setValue={setCharacter} />\n            <ControlLabel>Corp</ControlLabel>\n            <ApiSelect apiLookup={searchCorps} setValue={setCorporation} />\n            <ControlLabel>Moon</ControlLabel>\n            <ApiSelect apiLookup={searchMoons} setValue={setMoon} />\n            <HelpBlock>Search for who and what you want to rent.</HelpBlock>\n            <FormControl\n              type=\"text\"\n              value={isk}\n              placeholder=\"Enter text\"\n              onChange={handleIskChange}\n            />\n          </FormGroup>\n\n          <h3>\n            Rent {moon_id.label}({moon_id.value}) to {character_id.label}(\n            {character_id.value}) from {corporation_id.label}(\n            {corporation_id.value}) for ${isk}\n          </h3>\n        </form>\n      </Panel.Body>\n    </Panel>\n  );\n};\n","import \"./App.css\";\nimport React from \"react\";\nimport { PanelLoader } from \"./components/PanelLoader\";\nimport { MoonRentalPannel } from \"./components/MoonRentalPannel\";\n\nfunction App() {\n  return (\n    <>\n      <PanelLoader></PanelLoader>\n      <MoonRentalPannel></MoonRentalPannel>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  \n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}

{"version":3,"sources":["helpers/Api.js","components/ErrorLoader.js","components/BaseTable.js","components/ErrorBoundary.js","components/OreColourKey.js","pages/CorporateLedger.js","pages/FutureExtractions.js","components/PanelLoader.js","components/NavLinkActive.js","components/MoonMenu.js","Moons.js","index.js"],"names":["a","days","axios","get","params","past_days","api","data","defaults","xsrfHeaderName","ErrorLoader","Panel","Body","className","xmlns","width","height","fill","class","viewBox","d","colourStyles","option","styles","color","MyTooltip","message","Tooltip","id","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","textColumnFilter","count","length","value","onChange","e","target","undefined","placeholder","defaultPropGetter","BaseTable","isLoading","isFetching","error","columns","asyncExpandFunction","getRowProps","defaultSort","defaultColumn","React","useMemo","Filter","filterTypes","text","rows","ids","filter","row","some","rowValue","values","name","hasOwnProperty","originalSubRows","reduce","p","r","ob","split","prop","toLowerCase","includes","useTable","initialState","pageSize","sortBy","useFilters","useSortBy","useExpanded","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","visibleColumns","state","pageIndex","Table","striped","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","render","canSort","isSorted","isSortedDesc","Glyphicon","glyph","canFilter","i","rowProps","cells","cell","style","verticalAlign","getCellProps","isExpanded","ButtonToolbar","ButtonGroup","Button","bsStyle","onClick","disabled","active","SplitButton","title","onSelect","Number","MenuItem","eventKey","OverlayTrigger","placement","overlay","Date","toLocaleString","ErrorBoundary","props","errorInfo","this","setState","children","Component","OreColourMap","OreColourKey","Label","bsSize","backgroundColor","margin","dateFormat","Intl","DateTimeFormat","year","month","day","timeFormat","hour","minute","hour12","CorporateLedger","useQuery","getExtractions","initialData","Header","accessor","Cell","format","parse","ReactTimeAgo","date","original","ObserverName","constellation","fontSize","options","Set","forEach","ores","add","type","cat","label","defaultValue","concat","o","c","ore","mined","volume","total_volume","toFixed","display","alignContent","justifyContent","alt","borderRadius","cat_id","src","flexGrow","marginLeft","total_m3","desc","FutureExtractions","getFutureExtractions","percent","minWidth","PanelLoader","NavLink","location","useLocation","useEffect","window","href","endsWith","NavItem","contextTypes","router","PropTypes","object","MoonMenu","futureExtractions","observers","Navbar","fluid","collapseOnSelect","Toggle","Collapse","Nav","Brand","TimeAgo","addDefaultLocale","en","Moons","getPerms","view_observations","exact","path","component","to","queryClient","QueryClient","ReactDOM","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.a36bd866.chunk.js","sourcesContent":["import axios from \"axios\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\nfunction fetchFromObject(obj, prop) {\n  if (typeof obj === \"undefined\") return \"Error\";\n  var _index = prop.indexOf(\".\");\n  if (_index > -1) {\n    return fetchFromObject(\n      obj[prop.substring(0, _index)],\n      prop.substr(_index + 1)\n    );\n  }\n  return obj[prop];\n}\n\nfunction return_key_pair(label_key, value_key, ob) {\n  return ob.reduce((p, c) => {\n    try {\n      p.push({\n        value: fetchFromObject(c, value_key),\n        label: fetchFromObject(c, label_key),\n      });\n      return p;\n    } catch (err) {\n      console.log(`ERROR searching for key/val`);\n      console.log(err);\n      return p;\n    }\n  }, []);\n}\n\nexport async function searchChars(search_str) {\n  const api = await axios.get(`/m/api/characters/search`, {\n    params: { search_text: search_str },\n  });\n  const characters = return_key_pair(\n    \"character_name\",\n    \"character_id\",\n    api.data\n  );\n  characters.sort();\n  return characters;\n}\n\nexport async function searchCorps(search_str) {\n  const api = await axios.get(`/m/api/corporations/search`, {\n    params: { search_text: search_str },\n  });\n  const corps = return_key_pair(\"corporation_name\", \"corporation_id\", api.data);\n  corps.sort();\n  return corps;\n}\n\nexport async function searchMoons(search_str) {\n  const api = await axios.get(`/m/api/moons/search`, {\n    params: { search_text: search_str },\n  });\n  const moons = return_key_pair(\"name\", \"id\", api.data);\n  moons.sort();\n  return moons;\n}\n\nexport async function getExtractions(days = 3) {\n  const api = await axios.get(`/m/api/extractions`, {\n    params: { past_days: days },\n  });\n\n  return api.data;\n}\n\nexport async function getFutureExtractions() {\n  const api = await axios.get(`/m/api/extractions/future`);\n\n  return api.data;\n}\n\nexport async function getPerms() {\n  const api = await axios.get(`/m/api/user/permissions`);\n\n  return api.data;\n}\n","import React from \"react\";\nimport { Panel } from \"react-bootstrap\";\nimport \"./PanelLoader.css\";\n\nexport const ErrorLoader = () => {\n  return (\n    <Panel.Body className=\"flex-container\">\n      <div className=\"text-center\">\n        <div className=\"error-size bottom-text\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"100\"\n            height=\"100\"\n            fill=\"currentColor\"\n            class=\"bi bi-exclamation-triangle error-anim\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path d=\"M7.938 2.016A.13.13 0 0 1 8.002 2a.13.13 0 0 1 .063.016.146.146 0 0 1 .054.057l6.857 11.667c.036.06.035.124.002.183a.163.163 0 0 1-.054.06.116.116 0 0 1-.066.017H1.146a.115.115 0 0 1-.066-.017.163.163 0 0 1-.054-.06.176.176 0 0 1 .002-.183L7.884 2.073a.147.147 0 0 1 .054-.057zm1.044-.45a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566z\" />\n            <path d=\"M7.002 12a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 5.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995z\" />\n          </svg>\n        </div>\n        <h3 className=\"text-margin\">Error Loading Component</h3>\n      </div>\n    </Panel.Body>\n  );\n};\n","import React from \"react\";\nimport { Button, Tooltip, OverlayTrigger } from \"react-bootstrap\";\nimport {\n  useTable,\n  useFilters,\n  usePagination,\n  useSortBy,\n  useExpanded,\n} from \"react-table\";\nimport Select from \"react-select\";\nimport { Bars } from \"@agney/react-loading\";\nimport {\n  ButtonToolbar,\n  ButtonGroup,\n  Glyphicon,\n  MenuItem,\n  SplitButton,\n  Table,\n} from \"react-bootstrap\";\nimport \"./BaseTable.css\";\nimport { ErrorLoader } from \"../components/ErrorLoader\";\n\nexport function SubRows({\n  row,\n  rowProps,\n  visibleColumns,\n  data,\n  error,\n  isLoading,\n}) {\n  if (isLoading) {\n    return (\n      <tr>\n        <td />\n        <td colSpan={visibleColumns.length - 1}>Loading...</td>\n      </tr>\n    );\n  }\n  if (error) {\n    return (\n      <tr>\n        <td />\n        <td colSpan={visibleColumns.length - 1}>Unable to Fetch from API!</td>\n      </tr>\n    );\n  }\n\n  if (data.length === 0) {\n    return (\n      <tr>\n        <td />\n        <td colSpan={visibleColumns.length - 1}>Empty!</td>\n      </tr>\n    );\n  }\n\n  // error handling here :)\n\n  return (\n    <>\n      {data.map((x, i) => {\n        return (\n          <tr {...rowProps} key={`${rowProps.key}-expanded-${i}`}>\n            {row.cells.map((cell) => {\n              return (\n                <td {...cell.getCellProps()}>\n                  {cell.render(cell.column.SubCell ? \"SubCell\" : \"Cell\", {\n                    value: cell.column.accessor && cell.column.accessor(x, i),\n                    row: { ...row, original: x },\n                  })}\n                </td>\n              );\n            })}\n          </tr>\n        );\n      })}\n    </>\n  );\n}\n\nexport const colourStyles = {\n  option: (styles) => {\n    return {\n      ...styles,\n      color: \"black\",\n    };\n  },\n};\n\nfunction MyTooltip({ message }) {\n  return <Tooltip id=\"character_tooltip\">{message}</Tooltip>;\n}\n\n// Define a default UI for filtering\nfunction DefaultColumnFilter({\n  column: { filterValue, preFilteredRows, setFilter },\n}) {\n  return <></>;\n}\n\nexport function textColumnFilter({\n  column: { filterValue, preFilteredRows, setFilter },\n}) {\n  const count = preFilteredRows.length;\n\n  return (\n    <input\n      className=\"form-control\"\n      value={filterValue || \"\"}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n      }}\n      placeholder={`Search ${count} records...`}\n    />\n  );\n}\n\n// This is a custom filter UI for selecting\n// a unique option from a list\nexport function SelectColumnFilter({\n  column: { setFilter, filterValue, preFilteredRows, id },\n}) {\n  // Calculate the options for filtering\n  // using the preFilteredRows\n  const options = React.useMemo(() => {\n    const options = new Set();\n    if (!preFilteredRows) {\n      return [];\n    }\n    preFilteredRows.forEach((row) => {\n      if (row.values[id] !== null) {\n        if (typeof row.values[id] === \"object\") {\n          options.add(row.values[id][\"name\"]);\n        } else {\n          options.add(row.values[id]);\n        }\n      }\n    });\n    return [...options.values()];\n  }, [id, preFilteredRows]);\n\n  // Render a multi-select box\n  return (\n    <Select\n      key={filterValue}\n      title={filterValue}\n      onChange={(e) => setFilter(e.value)}\n      value={{ label: filterValue || \"All\" }}\n      defaultValue={{ label: \"All\" }}\n      styles={colourStyles}\n      options={[{ id: -1, value: \"\", label: \"All\" }].concat(\n        options.map((o, i) => {\n          return { id: i, value: o, label: o };\n        })\n      )}\n    />\n  );\n}\n\nconst defaultPropGetter = () => ({});\n\nfunction strToKey(keyString, ob) {\n  return keyString.split(\".\").reduce(function (p, prop) {\n    return p[prop];\n  }, ob);\n}\n\nexport const BaseTable = ({\n  isLoading,\n  isFetching,\n  data,\n  error,\n  columns,\n  asyncExpandFunction,\n  getRowProps = defaultPropGetter,\n  defaultSort = [],\n}) => {\n  const defaultColumn = React.useMemo(\n    () => ({\n      // Let's set up our default Filter UI\n      Filter: DefaultColumnFilter,\n    }),\n    []\n  );\n\n  const filterTypes = React.useMemo(\n    () => ({\n      text: (rows, ids, filterValue) => {\n        return rows.filter((row) => {\n          return ids.some((id) => {\n            if (!filterValue) {\n              return true;\n            } else {\n              let rowValue = row.values[id];\n              if (typeof rowValue === \"object\") {\n                rowValue = rowValue.name;\n              }\n              if (row.hasOwnProperty(\"originalSubRows\")) {\n                rowValue += row.originalSubRows.reduce((p, r) => {\n                  return (p += \" \" + strToKey(id, r));\n                }, \"\");\n              }\n              return rowValue\n                ? rowValue.toLowerCase().includes(filterValue.toLowerCase())\n                : false;\n            }\n          });\n        });\n      },\n    }),\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    prepareRow,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    visibleColumns,\n    state: { pageIndex, pageSize },\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn,\n      filterTypes,\n      initialState: { pageSize: 20, sortBy: defaultSort },\n    },\n    useFilters,\n    useSortBy,\n    useExpanded,\n    usePagination\n  );\n\n  if (isLoading)\n    return (\n      <div className=\"col-xs-12 text-center\">\n        <Bars className=\"spinner-size\" />\n      </div>\n    );\n\n  if (error) return <ErrorLoader />;\n\n  return (\n    <>\n      <Table striped>\n        <thead {...getTableProps()}>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render(\"Header\")}\n                  {/* Add a sort direction indicator */}\n                  <span className=\"pull-right\">\n                    {column.canSort ? (\n                      column.isSorted ? (\n                        column.isSortedDesc ? (\n                          <Glyphicon glyph=\"sort-by-attributes-alt\" />\n                        ) : (\n                          <Glyphicon glyph=\"sort-by-attributes\" />\n                        )\n                      ) : (\n                        <Glyphicon glyph=\"sort\" />\n                      )\n                    ) : (\n                      \"\"\n                    )}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>\n                  <div>{column.canFilter ? column.render(\"Filter\") : null}</div>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row);\n            const rowProps = getRowProps(row);\n            return (\n              <>\n                <tr {...row.getRowProps(rowProps)}>\n                  {row.cells.map((cell) => {\n                    return (\n                      <td\n                        style={{ verticalAlign: \"middle\" }}\n                        {...cell.getCellProps()}\n                      >\n                        {cell.render(\"Cell\")}\n                      </td>\n                    );\n                  })}\n                </tr>\n                {row.isExpanded &&\n                  asyncExpandFunction({ row, rowProps, visibleColumns })}\n              </>\n            );\n          })}\n        </tbody>\n      </Table>\n      <div className=\"pagination pull-right\">\n        <ButtonToolbar>\n          <ButtonGroup>\n            <Button\n              bsStyle=\"success\"\n              onClick={() => gotoPage(0)}\n              disabled={!canPreviousPage}\n            >\n              <Glyphicon glyph=\"step-backward\" />\n            </Button>{\" \"}\n            <Button\n              bsStyle=\"success\"\n              onClick={() => previousPage()}\n              disabled={!canPreviousPage}\n            >\n              <Glyphicon glyph=\"triangle-left\" />\n            </Button>{\" \"}\n            <Button\n              bsStyle=\"success\"\n              onClick={() => nextPage()}\n              disabled={!canNextPage}\n            >\n              <Glyphicon glyph=\"triangle-right\" />\n            </Button>{\" \"}\n            <Button\n              bsStyle=\"success\"\n              onClick={() => gotoPage(pageCount - 1)}\n              disabled={!canNextPage}\n            >\n              <Glyphicon glyph=\"step-forward\" />\n            </Button>\n          </ButtonGroup>\n          <ButtonGroup>\n            <Button active bsStyle=\"success\">\n              {\"Page Size:\"}\n            </Button>{\" \"}\n            <SplitButton\n              id=\"pageSizeDropdown\"\n              bsStyle=\"success\"\n              title={pageSize}\n              onSelect={(e) => {\n                setPageSize(Number(e));\n              }}\n            >\n              {[20, 50, 100, 1000000].map((pageSize) => (\n                <MenuItem\n                  id={pageSize}\n                  key={pageSize}\n                  eventKey={pageSize}\n                  value={pageSize}\n                >\n                  Show {pageSize}\n                </MenuItem>\n              ))}\n            </SplitButton>\n          </ButtonGroup>\n        </ButtonToolbar>\n      </div>\n      <div className=\"pagination pull-left\">\n        <ButtonGroup>\n          <Button active bsStyle=\"info\">\n            {\n              <>\n                {pageOptions.length > 0 ? (\n                  <>\n                    Page{\" \"}\n                    <strong>\n                      {pageIndex + 1} of {pageOptions.length}\n                    </strong>\n                  </>\n                ) : (\n                  <>\n                    Page <strong>- of -</strong>\n                  </>\n                )}\n              </>\n            }\n          </Button>{\" \"}\n          {isFetching ? (\n            <OverlayTrigger\n              placement=\"bottom\"\n              overlay={MyTooltip({ message: \"Refreshing Data\" })}\n            >\n              <Button bsStyle=\"info\">\n                <Glyphicon\n                  className=\"glyphicon-refresh-animate\"\n                  glyph=\"refresh\"\n                />\n              </Button>\n            </OverlayTrigger>\n          ) : (\n            <OverlayTrigger\n              placement=\"bottom\"\n              overlay={MyTooltip({\n                message: \"Data Loaded: \" + new Date().toLocaleString(),\n              })}\n            >\n              <Button bsStyle=\"info\">\n                <Glyphicon glyph=\"ok\" />\n              </Button>\n            </OverlayTrigger>\n          )}\n        </ButtonGroup>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { ErrorLoader } from \"./ErrorLoader\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo,\n    });\n    // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return <ErrorLoader />;\n    }\n    // Normally, just render children\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from \"react\";\nimport { Label } from \"react-bootstrap\";\n\nexport const OreColourMap = {\n  1884: \"#0D98BA\",\n  1921: \"#FFAA1D\",\n  1920: \"#4B8B3B\",\n  1922: \"#E86100\",\n  1923: \"#9B1C31\",\n};\n\nexport const OreColourKey = () => {\n  return (\n    <div className=\"flex-container\">\n      <div className=\"text-center\">\n        <Label\n          bsSize=\"small\"\n          style={{\n            backgroundColor: OreColourMap[1884],\n            margin: \"5px\",\n          }}\n        >\n          Ubiquitous Moon Asteroids\n        </Label>\n        <Label\n          bsSize=\"small\"\n          style={{\n            backgroundColor: OreColourMap[1920],\n            margin: \"5px\",\n          }}\n        >\n          Common Moon Asteroids\n        </Label>\n        <Label\n          bsSize=\"small\"\n          style={{\n            backgroundColor: OreColourMap[1921],\n            margin: \"5px\",\n          }}\n        >\n          Uncommon Moon Asteroids\n        </Label>\n        <Label\n          bsSize=\"small\"\n          style={{\n            backgroundColor: OreColourMap[1922],\n            margin: \"5px\",\n          }}\n        >\n          Rare Moon Asteroids\n        </Label>\n        <Label\n          bsSize=\"small\"\n          style={{\n            backgroundColor: OreColourMap[1923],\n            margin: \"5px\",\n          }}\n        >\n          Exceptional Moon Asteroids\n        </Label>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Panel, Label } from \"react-bootstrap\";\nimport { useQuery } from \"react-query\";\nimport { getExtractions } from \"../helpers/Api\";\nimport {\n  BaseTable,\n  textColumnFilter,\n  colourStyles,\n} from \"../components/BaseTable\";\nimport ErrorBoundary from \"../components/ErrorBoundary\";\nimport Select from \"react-select\";\nimport \"./CorporateLedger.css\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport { OreColourMap, OreColourKey } from \"../components/OreColourKey\";\n\nconst dateFormat = Intl.DateTimeFormat(\"default\", {\n  year: \"numeric\",\n  month: \"long\",\n  day: \"numeric\",\n});\nconst timeFormat = Intl.DateTimeFormat(\"default\", {\n  hour: \"numeric\",\n  minute: \"numeric\",\n  hour12: false,\n});\n\nconst CorporateLedger = () => {\n  const { isLoading, isFetching, error, data } = useQuery(\n    [\"extractions\"],\n    () => getExtractions(),\n    {\n      initialData: [],\n    }\n  );\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Frack Arrival\",\n        accessor: \"extraction_end\",\n        Cell: (props) => (\n          <h5 className=\"text-center\">\n            {dateFormat.format(Date.parse(props.value))}{\" \"}\n            {timeFormat.format(Date.parse(props.value))}\n            <br />\n            <Label className=\"\">\n              <ReactTimeAgo date={Date.parse(props.value)} />\n            </Label>\n          </h5>\n        ),\n      },\n      {\n        Header: \"Moon Name\",\n        accessor: \"moon.name\",\n        Filter: textColumnFilter,\n        filter: (rows, ids, filterValue) => {\n          return rows.filter((row) => {\n            return ids.some((id) => {\n              if (!filterValue) {\n                return true;\n              } else {\n                let rowValue = row.values[id];\n                rowValue += \" \"\n                rowValue += row.original.ObserverName\n                rowValue += \" \"\n                rowValue += row.original.constellation\n                return rowValue\n                  ? rowValue.toLowerCase().includes(filterValue.toLowerCase())\n                  : false;\n              }\n            });\n          });\n        },\n        Cell: (props) => (\n          <div className=\"text-center\">\n            <h4>{props.value}</h4>\n            <br />\n            <h5>{props.cell.row.original.ObserverName}</h5>\n            <h5>{props.cell.row.original.constellation}</h5>\n          </div>\n        ),\n      },\n      {\n        Header: \"Jackpot\",\n        accessor: \"jackpot\",\n        Cell: (props) =>\n          props.value ? (\n            <div className=\"text-center jackpot\">\n              <i class=\"fas fa-award\" style={{ fontSize: \"64px\" }}></i>\n            </div>\n          ) : (\n            <></>\n          ),\n      },\n      {\n        Header: \"Ore Composition\",\n        accessor: \"mined_ore\",\n        Filter: ({\n          column: { setFilter, filterValue, preFilteredRows, id },\n        }) => {\n          const options = React.useMemo(() => {\n            const options = new Set();\n            if (!preFilteredRows) {\n              return [];\n            }\n            preFilteredRows.forEach((row) => {\n              if (row.values[id] !== null) {\n                row.values[id].forEach((ores) => {\n                  options.add(ores.type.cat);\n                });\n              }\n            });\n            return [...options.values()];\n          }, [id, preFilteredRows]);\n          return (\n            <Select\n              key={filterValue}\n              title={filterValue}\n              onChange={(e) => setFilter(e.value)}\n              value={{ label: filterValue || \"All\" }}\n              defaultValue={{ label: \"All\" }}\n              styles={colourStyles}\n              options={[{ id: -1, value: \"\", label: \"All\" }].concat(\n                options.map((o, i) => {\n                  return { id: i, value: o, label: o };\n                })\n              )}\n            />\n          );\n        },\n        filter: (rows, ids, filterValue) => {\n          return rows.filter((row) => {\n            return ids.some((id) => {\n              if (!filterValue) {\n                return true;\n              } else {\n                let rowValue = row.values[id].reduce((p, c) => {\n                  return p + \"  \" + c.type.cat;\n                }, \"\");\n                return rowValue\n                  ? rowValue.toLowerCase().includes(filterValue.toLowerCase())\n                  : false;\n              }\n            });\n          });\n        },\n        Cell: (props) =>\n          props.value ? (\n            <>\n              <div className=\"\">\n                {props.value.map((ore) => {\n                  let mined = Number(\n                    (ore.volume / ore.total_volume) * 100\n                  ).toFixed(1);\n                  return (\n                    <>\n                      <div\n                        style={{\n                          display: \"flex\",\n                          alignContent: \"center\",\n                          justifyContent: \"center\",\n                        }}\n                      >\n                        <img\n                          alt={ore.type.name}\n                          style={{\n                            width: \"30px\",\n                            height: \"30px\",\n                            margin: \"15px\",\n                            borderRadius: \"30px\",\n                            backgroundColor: OreColourMap[ore.type.cat_id],\n                          }}\n                          src={\n                            \"https://images.evetech.net/types/\" +\n                            ore.type.id +\n                            \"/icon\"\n                          }\n                        ></img>\n                        <div\n                          style={{\n                            flexGrow: 1,\n                          }}\n                        >\n                          <h5>\n                            {ore.type.name}{\" \"}\n                            <Label style={{ marginLeft: \"5px\" }} className=\"\">\n                              {(\n                                (ore.total_volume /\n                                  props.cell.row.original.total_m3) *\n                                100\n                              ).toFixed(0)}\n                              %\n                            </Label>\n                            {ore.value > 0 ? (\n                              <Label className=\"\" style={{ marginLeft: \"5px\" }}>\n                                ${Number(ore.value / 1000000000).toFixed(2)}B\n                                Mined\n                              </Label>\n                            ) : (\n                              <></>\n                            )}\n                            <Label\n                              className=\"pull-right\"\n                              bsSize=\"small\"\n                              style={{\n                                backgroundColor: OreColourMap[ore.type.cat_id],\n                              }}\n                            >\n                              {ore.type.cat}\n                            </Label>\n                          </h5>\n                          <div className=\"progress\" style={{ margin: \"0px\" }}>\n                            <div\n                              className={\n                                mined > 70\n                                  ? \"progress-bar progress-bar-striped progress-bar-warning\"\n                                  : \"progress-bar progress-bar-striped progress-bar-info active\"\n                              }\n                              style={{\n                                width: mined + \"%\",\n                                color: \"black\",\n                              }}\n                            >\n                              {mined}\n                              {\"% Mined\"}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </>\n                  );\n                })}\n              </div>\n            </>\n          ) : (\n            <></>\n          ),\n      },\n      //{\n      //  Header: \"Mined Value\",\n      //  Cell: (props) =>\n      //    props.cell.row.original.mined_ore ? (\n      //      <>\n      //        $\n      //        {Number(\n      //          props.cell.row.original.mined_ore.reduce((p, c) => {\n      //            return (p += c.value);\n      //          }, 0) / 1000000000\n      //        ).toFixed(2)}{\" \"}\n      //        Bill\n      //      </>\n      //    ) : (\n      //      <></>\n      //    ),\n      //},\n    ],\n    []\n  );\n\n  const defaultSort = [\n    {\n      id: \"extraction_end\",\n      desc: true,\n    },\n  ];\n\n  return (\n    <ErrorBoundary>\n      <h5 className=\"text-center small\">Key:</h5>\n      <OreColourKey />\n      <br />\n      <Panel>\n        <Panel.Body>\n          <BaseTable\n            {...{ isLoading, isFetching, data, columns, error, defaultSort }}\n          />\n        </Panel.Body>\n      </Panel>\n    </ErrorBoundary>\n  );\n};\n\nexport default CorporateLedger;\n","import React from \"react\";\nimport { Panel, Label } from \"react-bootstrap\";\nimport { useQuery } from \"react-query\";\nimport { getFutureExtractions } from \"../helpers/Api\";\nimport {\n  BaseTable,\n  textColumnFilter,\n  colourStyles,\n} from \"../components/BaseTable\";\nimport ErrorBoundary from \"../components/ErrorBoundary\";\nimport Select from \"react-select\";\nimport \"./CorporateLedger.css\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport { OreColourMap, OreColourKey } from \"../components/OreColourKey\";\n\nconst dateFormat = Intl.DateTimeFormat(\"default\", {\n  year: \"numeric\",\n  month: \"long\",\n  day: \"numeric\",\n});\nconst timeFormat = Intl.DateTimeFormat(\"default\", {\n  hour: \"numeric\",\n  minute: \"numeric\",\n  hour12: false,\n});\n\nconst FutureExtractions = () => {\n  const { isLoading, isFetching, error, data } = useQuery(\n    [\"future-extractions\"],\n    () => getFutureExtractions(),\n    {\n      initialData: [],\n    }\n  );\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Frack Arrival\",\n        accessor: \"extraction_end\",\n        Cell: (props) => (\n          <h5 className=\"text-center\">\n            {dateFormat.format(Date.parse(props.value))}{\" \"}\n            {timeFormat.format(Date.parse(props.value))}\n            <br />\n            <Label className=\"\">\n              <ReactTimeAgo date={Date.parse(props.value)} />\n            </Label>\n          </h5>\n        ),\n      },\n      {\n        Header: \"Moon Name\",\n        accessor: \"moon.name\",\n        Filter: textColumnFilter,\n        filter: (rows, ids, filterValue) => {\n          return rows.filter((row) => {\n            return ids.some((id) => {\n              if (!filterValue) {\n                return true;\n              } else {\n                let rowValue = row.values[id];\n                rowValue += \" \"\n                rowValue += row.original.ObserverName\n                rowValue += \" \"\n                rowValue += row.original.constellation\n                return rowValue\n                  ? rowValue.toLowerCase().includes(filterValue.toLowerCase())\n                  : false;\n              }\n            });\n          });\n        },\n        Cell: (props) => (\n          <div className=\"text-center\">\n            <h4>{props.value}</h4>\n            <br />\n            <h5>{props.cell.row.original.ObserverName}</h5>\n            <h5>{props.cell.row.original.constellation}</h5>\n          </div>\n        ),\n      },\n      {\n        Header: \"Ore Composition\",\n        accessor: \"mined_ore\",\n        Filter: ({\n          column: { setFilter, filterValue, preFilteredRows, id },\n        }) => {\n          const options = React.useMemo(() => {\n            const options = new Set();\n            if (!preFilteredRows) {\n              return [];\n            }\n            preFilteredRows.forEach((row) => {\n              if (row.values[id] !== null) {\n                row.values[id].forEach((ores) => {\n                  options.add(ores.type.cat);\n                });\n              }\n            });\n            return [...options.values()];\n          }, [id, preFilteredRows]);\n          return (\n            <Select\n              key={filterValue}\n              title={filterValue}\n              onChange={(e) => setFilter(e.value)}\n              value={{ label: filterValue || \"All\" }}\n              defaultValue={{ label: \"All\" }}\n              styles={colourStyles}\n              options={[{ id: -1, value: \"\", label: \"All\" }].concat(\n                options.map((o, i) => {\n                  return { id: i, value: o, label: o };\n                })\n              )}\n            />\n          );\n        },\n        filter: (rows, ids, filterValue) => {\n          return rows.filter((row) => {\n            return ids.some((id) => {\n              if (!filterValue) {\n                return true;\n              } else {\n                let rowValue = row.values[id].reduce((p, c) => {\n                  return p + \"  \" + c.type.cat;\n                }, \"\");\n                return rowValue\n                  ? rowValue.toLowerCase().includes(filterValue.toLowerCase())\n                  : false;\n              }\n            });\n          });\n        },\n        Cell: (props) =>\n          props.value ? (\n            <div className=\"\">\n              {props.value.map((ore) => {\n                let percent = (\n                  (ore.total_volume / props.cell.row.original.total_m3) *\n                  100\n                ).toFixed(0);\n                return (\n                  <div\n                    style={{\n                      display: \"flex\",\n                      alignContent: \"center\",\n                      justifyContent: \"center\",\n                    }}\n                  >\n                    <img\n                      alt={ore.type.name}\n                      style={{\n                        width: \"30px\",\n                        height: \"30px\",\n                        margin: \"15px\",\n                        borderRadius: \"30px\",\n                        backgroundColor: OreColourMap[ore.type.cat_id],\n                      }}\n                      src={\n                        \"https://images.evetech.net/types/\" +\n                        ore.type.id +\n                        \"/icon\"\n                      }\n                    ></img>\n                    <div\n                      style={{\n                        flexGrow: 1,\n                      }}\n                    >\n                      <h5>\n                        {ore.type.name}{\" \"}\n                        <Label style={{ marginLeft: \"5px\" }} className=\"\">\n                          {percent}%\n                        </Label>\n                        <Label\n                          className=\"pull-right\"\n                          bsSize=\"small\"\n                          style={{\n                            backgroundColor: OreColourMap[ore.type.cat_id],\n                          }}\n                        >\n                          {ore.type.cat}\n                        </Label>\n                      </h5>\n                      <div\n                        className=\"progress\"\n                        style={{\n                          minWidth: \"40vw\",\n                          margin: \"0px\",\n                        }}\n                      >\n                        <div\n                          className={\n                            \"progress-bar progress-bar-striped progress-bar-info active\"\n                          }\n                          style={{\n                            width: percent + \"%\",\n                            color: \"black\",\n                            backgroundColor: OreColourMap[ore.type.cat_id],\n                          }}\n                        >\n                          {percent}\n                          {\"%\"}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          ) : (\n            <></>\n          ),\n      },\n    ],\n    []\n  );\n\n  const defaultSort = [\n    {\n      id: \"extraction_end\",\n      desc: false,\n    },\n  ];\n\n  return (\n    <ErrorBoundary>\n      <h5 className=\"text-center small\">Key:</h5>\n      <OreColourKey />\n      <br />\n      <Panel>\n        <Panel.Body>\n          <BaseTable\n            {...{ isLoading, isFetching, data, columns, error, defaultSort }}\n          />\n        </Panel.Body>\n      </Panel>\n    </ErrorBoundary>\n  );\n};\n\nexport default FutureExtractions;\n","import React from \"react\";\nimport { Bars } from \"@agney/react-loading\";\nimport { Panel } from \"react-bootstrap\";\nimport \"./PanelLoader.css\";\n\nexport const PanelLoader = () => {\n  return (\n    <Panel.Body className=\"flex-container\">\n      <Bars className=\"spinner-size\" />\n    </Panel.Body>\n  );\n};\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { NavItem } from \"react-bootstrap\";\nimport { useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst NavLink = (props) => {\n  const location = useLocation();\n\n  useEffect(() => {}, [location]);\n\n  var isActive = window.location.href.endsWith(props.href);\n  var className = isActive ? \"active\" : \"\";\n\n  return (\n    <NavItem className={className} {...props}>\n      {props.children}\n    </NavItem>\n  );\n};\n\nNavLink.contextTypes = {\n  router: PropTypes.object,\n};\n\nexport default NavLink;\n","import React from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { Navbar } from \"react-bootstrap\";\n\nimport NavLink from \"./NavLinkActive\";\n\nconst MoonMenu = ({ futureExtractions = false, observers = false }) => {\n  return (\n    <Navbar fluid collapseOnSelect>\n      <Navbar.Header>\n        <Navbar.Toggle />\n      </Navbar.Header>\n      <Navbar.Collapse>\n        <Nav>\n          <Navbar.Brand>Moon Board</Navbar.Brand>\n          <NavLink key=\"active\" href={`#/active`}>\n            Active Moons\n          </NavLink>\n          {futureExtractions ? (\n            <NavLink key=\"future\" href={`#/future`}>\n              Future Extractions\n            </NavLink>\n          ) : (\n            <></>\n          )}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default MoonMenu;\n","import React from \"react\";\nimport CorporateLedger from \"./pages/CorporateLedger\";\nimport FutureExtractions from \"./pages/FutureExtractions\";\nimport en from \"javascript-time-ago/locale/en\";\nimport TimeAgo from \"javascript-time-ago\";\nimport { getPerms } from \"./helpers/Api\";\nimport { PanelLoader } from \"./components/PanelLoader\";\nimport { useQuery } from \"react-query\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport MoonMenu from \"./components/MoonMenu\";\n\nTimeAgo.addDefaultLocale(en);\n\nfunction Moons() {\n  const { isLoading, data } = useQuery([\"perms\"], () => getPerms());\n\n  return isLoading ? (\n    <PanelLoader></PanelLoader>\n  ) : (\n    <Router>\n      <br />\n      <MoonMenu futureExtractions={data.view_observations} />\n      <Switch>\n        <Route exact path={\"/\"} component={() => <Redirect to=\"/active\" />} />\n        <Route path={\"/active\"} component={() => CorporateLedger()} />\n        {data.view_observations ? (\n          <Route path={\"/future\"} component={() => FutureExtractions()} />\n        ) : (\n          <></>\n        )}\n      </Switch>\n    </Router>\n  );\n}\n\nexport default Moons;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Moons from \"./Moons\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <Moons />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}
